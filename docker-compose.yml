version: "3"

services:
  runner:
    image: ghcr.io/bob-cd/runner
    networks:
      - bob-net
    depends_on:
      - storage
      - queue
    environment:
      BOB_STORAGE_URL: jdbc:postgresql://storage:5432/bob
      BOB_QUEUE_URL: amqp://queue:5672
      BOB_STREAM_URL: rabbitmq-stream://guest:guest@queue:5552/%2f
    user: podman
    devices:
      - /dev/fuse
    security_opt:
      - label=disable
      # next 2 are needed for rootless docker/containerd
      - seccomp=unconfined
      - apparmor=unconfined

  apiserver:
    image: ghcr.io/bob-cd/apiserver
    ports:
      - 7777:7777
    networks:
      - bob-net
    depends_on:
      - queue
      - storage
    environment:
      BOB_STORAGE_URL: jdbc:postgresql://storage:5432/bob
      BOB_QUEUE_URL: amqp://queue:5672
      BOB_STREAM_URL: rabbitmq-stream://guest:guest@queue:5552/%2f

  queue:
    image: docker.io/library/rabbitmq:3-management-alpine
    entrypoint: sh
    command:
      - "-c"
      - "rabbitmq-plugins enable --offline rabbitmq_stream && rabbitmq-server"
    networks:
      - bob-net
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - queuedata:/var/lib/rabbitmq/mnesia

  storage:
    image: docker.io/library/postgres:alpine
    networks:
      - bob-net
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: bob
      POSTGRES_USER: bob
      POSTGRES_PASSWORD: bob

  artifact:
    image: ghcr.io/bob-cd/artifact-local
    networks:
      - bob-net
    ports:
      - 8001:8001
    volumes:
      - artifactdata:/opt/artifacts

  resource:
    image: ghcr.io/bob-cd/resource-git
    networks:
      - bob-net
    ports:
      - 8000:8000

networks:
  bob-net:

volumes:
  pgdata:
  artifactdata:
  queuedata:
